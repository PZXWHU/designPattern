/**
 * 装饰者模式：动态的将责任附加到对象之上
 *
 * 装饰者与被装饰者有相同的超类型
 * 装饰者可以被装饰者的行为之前或者之后，加上自己的行为，以达到特定的目的。
 *
 *  装饰者模式：抽象组件类和抽象装饰者类
 *
 *  抽象组件类是装饰者和被装饰者的超类型，所以抽象装饰者类需要继承自抽象组件类
 *  抽象装饰者类内关联一个抽象组件类实例对象，从而对其进行装饰，扩展其功能。
 *
 */
package com.pzx.decorator;